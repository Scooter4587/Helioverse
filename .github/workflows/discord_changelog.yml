name: Push changelog to Discord

on:
  push:
    branches: [ "main" ]
    paths:
      - "CHANGELOG.md"
      - ".github/workflows/discord_changelog.yml"

permissions:
  contents: read

jobs:
  send-discord:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Extract latest block (Helioverse format)
        id: extract
        shell: bash
        run: |
          set -euo pipefail

          # Najnovší blok začína hlavičkou: [X.Y.Z] – YYYY-MM-DD (alebo s '-')
          awk '
            BEGIN{in_section=0}
            /^\[[0-9]+\.[0-9]+\.[0-9]+\][[:space:]]*[–-][[:space:]]*[0-9]{4}-[0-9]{2}-[0-9]{2}[[:space:]]*$/ {
              if(in_section==0){in_section=1; print; next} else {exit}
            }
            { if(in_section==1){print} }
          ' CHANGELOG.md > latest.txt

          if ! [ -s latest.txt ]; then
            echo "ERROR: Nenájdený žiadny blok verzie vo formáte: [X.Y.Z] – YYYY-MM-DD" >&2
            exit 1
          fi

          header_line="$(head -n 1 latest.txt)"
          version="$(echo "$header_line" | sed -E 's/^\[([0-9]+\.[0-9]+\.[0-9]+)\].*$/\1/')"
          date="$(echo "$header_line" | sed -E 's/^\[[^]]+\][[:space:]]*[–-][[:space:]]*([0-9]{4}-[0-9]{2}-[0-9]{2}).*$/\1/')"

          # Telo bez hlavičky
          tail -n +2 latest.txt > body.txt

          # Rozparcuj body do sekcií a pred každý riadok vlož "- "
          rm -f Added.txt Changed.txt Fixed.txt Notes.txt || true
          awk '
            BEGIN{sec=""}
            { gsub(/\r$/,"") }               # odseknúť CR, ak by bolo
            $0=="Added"   {sec="Added";   next}
            $0=="Changed" {sec="Changed"; next}
            $0=="Fixed"   {sec="Fixed";   next}
            $0=="Notes"   {sec="Notes";   next}
            NF==0 {next}                     # prázdne riadky preskoč
            sec!="" {print "- "$0 >> (sec".txt")}
          ' body.txt

          # Načítaj sekcie (môžu byť prázdne)
          ADDED="$(cat Added.txt 2>/dev/null || true)"
          CHANGED="$(cat Changed.txt 2>/dev/null || true)"
          FIXED="$(cat Fixed.txt 2>/dev/null || true)"
          NOTES="$(cat Notes.txt 2>/dev/null || true)"

          {
            echo "version=$version"
            echo "date=$date"
            echo "added<<EOF"
            echo "$ADDED"
            echo "EOF"
            echo "changed<<EOF"
            echo "$CHANGED"
            echo "EOF"
            echo "fixed<<EOF"
            echo "$FIXED"
            echo "EOF"
            echo "notes<<EOF"
            echo "$NOTES"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Post to Discord (embed fields)
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
          VERSION:     ${{ steps.extract.outputs.version }}
          DATE:        ${{ steps.extract.outputs.date }}
          ADDED:       ${{ steps.extract.outputs.added }}
          CHANGED:     ${{ steps.extract.outputs.changed }}
          FIXED:       ${{ steps.extract.outputs.fixed }}
          NOTES:       ${{ steps.extract.outputs.notes }}
        shell: bash
        run: |
          set -euo pipefail

          # Začni s prázdnym zoznamom fields a pridávaj sekcie len ak nie sú prázdne
          FIELDS='[]'
          if [ -n "${ADDED// /}" ]; then
            FIELDS="$(echo "$FIELDS" | jq --arg v "$ADDED"   '. + [{name:"Added",   value:$v, inline:false}]')"
          fi
          if [ -n "${CHANGED// /}" ]; then
            FIELDS="$(echo "$FIELDS" | jq --arg v "$CHANGED" '. + [{name:"Changed", value:$v, inline:false}]')"
          fi
          if [ -n "${FIXED// /}" ]; then
            FIELDS="$(echo "$FIELDS" | jq --arg v "$FIXED"   '. + [{name:"Fixed",   value:$v, inline:false}]')"
          fi
          if [ -n "${NOTES// /}" ]; then
            FIELDS="$(echo "$FIELDS" | jq --arg v "$NOTES"   '. + [{name:"Notes",   value:$v, inline:false}]')"
          fi

          PAYLOAD="$(jq -n \
            --arg title "Helioverse – ${VERSION}" \
            --arg date  "${DATE}" \
            --argjson fields "${FIELDS}" \
            '{
              embeds: [{
                title: $title,
                color: 5814783,
                fields: $fields,
                footer: { text: ("Released " + $date) }
              }]
            }')"

          RESP="$(curl -sS -w '\n%{http_code}' \
                 -H 'Content-Type: application/json' \
                 -X POST \
                 -d "$PAYLOAD" \
                 "$WEBHOOK_URL")"
          HTTP_CODE="$(printf '%s' "$RESP" | tail -n1)"
          echo "Discord HTTP code: $HTTP_CODE"
          test "$HTTP_CODE" = "204" -o "$HTTP_CODE" = "200"